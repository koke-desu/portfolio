{"version":3,"sources":["pictures/desk_and_pc2.jpg","pictures/portfolio_sc.png","pictures/github.jpg","components/Contents_1.js","components/Contents_2.js","components/Works.js","components/Contents_3.js","components/Contents.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Contents_1","id","className","Contents_2","Works","props","openModal","e","preventDefault","document","getElementById","target","dataset","style","display","closeModal","modals","getElementsByClassName","caption_list","i","data","length","push","src","img","alt","name","data-target","onClick","modal_list","outline","skills","map","value","href","url","github_icon","Contents_3","works_1","img_1","Contents","selectContents","console","error","setContents","App","useState","setSelectContents","changeContents","useEffect","selected_contents_","parentElement","all_contents_","scroll","setScroll","window","addEventListener","documentElement","scrollTop","removeEventListener","menu_bar_","picture_area_","scrollHeight","img_background","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.a42e59e2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/desk_and_pc2.119142d4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/portfolio_sc.0d1a7bd1.png\";","module.exports = __webpack_public_path__ + \"static/media/github.665f57a3.jpg\";","import React from \"react\";\r\nimport \"../css/style_contents_1.css\";\r\n\r\n// 1.About Me\r\nconst Contents_1 = () => {\r\n  return (\r\n    <div id=\"contents_1\">\r\n      <h2>About Me</h2>\r\n      <p className=\"explain\">\r\n        　2002年生まれ、現在18歳の村上浩輔です。2020年3月に富山工業高校を卒業し、今は富山県立大学・情報システム工学科の学部1年生です。\r\n        <br />\r\n        　現在Webアプリ開発の修行中。主にフロントエンドとしてReact.js、バックエンドとしてPython/Djangoを使って開発をしています。\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contents_1;\r\n","import React from \"react\";\r\nimport \"../css/style_contents_2.css\";\r\n\r\n// 2.My Skills\r\nconst Contents_2 = () => {\r\n  return (\r\n    <div id=\"contents_2\">\r\n      <h2>My Skills</h2>\r\n      <p className=\"explain\">\r\n        　これまでに習得した言語やフレームワーク、ツールを表にまとめました。\r\n        <br />\r\n        　それぞれの技術のレベルは Lv.1: 勉強中、Lv.2: 使える(成果物なし)、 Lv.3: 使える(成果物あり)\r\n        を意味します。\r\n      </p>\r\n      <h3>フロントエンド関連</h3>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th className=\"c_1\">技術</th>\r\n            <th className=\"c_2\">レベル</th>\r\n            <th className=\"c_3\">備考</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>HTML/CSS (SCSS)</td>\r\n            <td>3</td>\r\n            <td>CSSは主にSCSSを使って記述しています。</td>\r\n          </tr>\r\n          <tr>\r\n            <td>JavaScript</td>\r\n            <td>3</td>\r\n            <td>-</td>\r\n          </tr>\r\n          <tr>\r\n            <td>TypeScript</td>\r\n            <td>1</td>\r\n            <td>-</td>\r\n          </tr>\r\n          <tr>\r\n            <td>React.js</td>\r\n            <td>3</td>\r\n            <td>-</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <h3>バックエンド関連</h3>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th className=\"c_1\">技術</th>\r\n            <th className=\"c_2\">レベル</th>\r\n            <th className=\"c_3\">備考</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>Python</td>\r\n            <td>3</td>\r\n            <td>-</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Django</td>\r\n            <td>3</td>\r\n            <td>-</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <h3>その他の言語、ツール</h3>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th className=\"c_1\">技術</th>\r\n            <th className=\"c_2\">レベル</th>\r\n            <th className=\"c_3\">備考</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>C++</td>\r\n            <td>2</td>\r\n            <td>主にAtCoderに出場するときに使用。現在のレートは423。</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Git・GitHub</td>\r\n            <td>1</td>\r\n            <td>-</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contents_2;\r\n","import React from \"react\";\r\nimport \"../css/style_works.css\";\r\nimport github_icon from \"../pictures/github.jpg\";\r\n\r\n//親コンポーネントからの指定に則り、成果物の見出しと詳細を見るためのモダルを表示する。\r\n//モダルの表示、非表示の管理を行う。\r\nconst Works = (props) => {\r\n  //指定されたモダルのdisplayをblockにして、可視化する関数。\r\n  //data-target属性に標的のモダルのidを指定する。\r\n  const openModal = (e) => {\r\n    e.preventDefault();\r\n    let modal = document.getElementById(e.target.dataset.target);\r\n    modal.style.display = \"block\";\r\n  };\r\n\r\n  //すべてのモダルのdisplayをblockにして、非可視化する関数。\r\n  //openModal()とは異なり、data-target属性の指定は必要ない。\r\n  const closeModal = (e) => {\r\n    e.preventDefault();\r\n    let modals = document.getElementsByClassName(\"modal\");\r\n    for (let i of modals) {\r\n      i.style.display = \"none\";\r\n    }\r\n  };\r\n\r\n  let caption_list = []; //成果物の見出しを入れるリスト。\r\n  for (var i = 0; i < props.data.length; i++) {\r\n    caption_list.push(\r\n      <div className=\"f-item\">\r\n        <img src={props.data[i].img} className=\"works-img\" alt={\"img_\" + (i + 1)} />\r\n        <p className=\"works-name\">{props.data[i].name}</p>\r\n        <a data-target={\"modal_\" + (i + 1)} className=\"modal-open\" onClick={openModal}></a>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  let modal_list = []; //モダルを入れておくリスト。\r\n  for (var i = 0; i < props.data.length; i++) {\r\n    modal_list.push(\r\n      <div id={\"modal_\" + (i + 1)} className=\"modal\">\r\n        <div className=\"modal-bg\" onClick={closeModal}></div>\r\n        <div className=\"modal-content\">\r\n          <div className=\"img-area\">\r\n            <img src={props.data[i].img} alt={\"img_\" + (i + 1)}></img>\r\n          </div>\r\n          <div className=\"text-area\">\r\n            <div className=\"explain-area\">\r\n              <h3>概要</h3>\r\n              <p>{props.data[i].outline}</p>\r\n            </div>\r\n            <div className=\"skills-area\">\r\n              <h3>使用技術</h3>\r\n              <ul>\r\n                {props.data[i].skills.map((value) => {\r\n                  return <li>{value}</li>;\r\n                })}\r\n              </ul>\r\n            </div>\r\n            <div className=\"url-area\">\r\n              <a href={props.data[i].url}>\r\n                <img src={github_icon} alt=\"github\" />\r\n              </a>\r\n            </div>\r\n          </div>\r\n          <a className=\"modal-close\" onClick={closeModal}>\r\n            ✕\r\n          </a>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div id=\"works\">\r\n      <div className=\"f-conteiner\">{caption_list}</div>\r\n      <div className=\"modals\">{modal_list}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Works;\r\n","import React from \"react\";\r\nimport \"../css/style_contents_3.css\";\r\nimport img_1 from \"../pictures/portfolio_sc.png\";\r\nimport Works from \"./Works\";\r\n\r\n// 3.Works\r\nconst Contents_3 = () => {\r\n  // それぞれの成果物の内容\r\n  // 見出しに使う要素　->  name: 成果物の名前。 img: 画像のリンク。\r\n  // モダルに使う要素　->  outline: 成果物の概要。　skills: 使った技術。配列で渡す。  url: リポジトリのurl。\r\n  const works_1 = {\r\n    name: \"Kosuke Murakami's Portfolio\",\r\n    img: img_1,\r\n    outline:\r\n      \"  このサイトです。React.jsを使っていますが特段リアクティブな動作がなく、独自性に欠け、LPのようになってしまっています。今後改善していきたいです。\",\r\n    skills: [\"HTML/CSS (SCSS)\", \"javascript\", \"React.js\", \"Git/Github\", \"Github page\"],\r\n    url: \"https://github.com/koke-desu/portfolio\",\r\n  };\r\n\r\n  return (\r\n    <div id=\"contents_3\">\r\n      <h2>Works</h2>\r\n      <p className=\"explain\">\r\n        　これまでに制作した成果物です。クリックでそれぞれの詳細を見ることができます。\r\n      </p>\r\n      <Works data={[works_1]}></Works>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contents_3;\r\n","import React from \"react\";\r\nimport Contents_1 from \"./Contents_1.js\";\r\nimport Contents_2 from \"./Contents_2.js\";\r\nimport Contents_3 from \"./Contents_3.js\";\r\n\r\n//<App>より表示するコンテンツを指定するための関数。\r\n//存在しないコンテンツを指定された場合、\"no contents!\"と表示する。\r\nconst setContents = (selectContents) => {\r\n  switch (selectContents) {\r\n    case \"contents_1\":\r\n      return <Contents_1 />;\r\n    case \"contents_2\":\r\n      return <Contents_2 />;\r\n    case \"contents_3\":\r\n      return <Contents_3 />;\r\n    default:\r\n      console.error(\"selected unexist content\");\r\n      return \"no contents!!\";\r\n  }\r\n};\r\n\r\n//メイン部。選択されたコンテンツを表示するだけ。\r\nconst Contents = (props) => {\r\n  return <div className=\"contents\">{setContents(props.selectContents)}</div>;\r\n};\r\n\r\nexport default Contents;\r\n","import React, { useState, useEffect } from \"react\";\nimport img_background from \"./pictures/desk_and_pc2.jpg\";\nimport \"./css/style_app.css\";\nimport Contents from \"./components/Contents\";\nimport Footer from \"./components/Footer\";\n\nfunction App() {\n  //表示するコンテンツを管理するためのstateと関数。<Contents/>に渡して表示させる。\n  const [selectContents, setSelectContents] = useState(\"contents_1\");\n\n  const changeContents = (e) => {\n    e.preventDefault();\n    setSelectContents(e.target.id);\n  };\n\n  //メニューバー上の選択されているコンテンツを灰色にする\n  useEffect(() => {\n    let selected_contents_ = document.getElementById(selectContents).parentElement;\n    let all_contents_ = document.getElementsByClassName(\"f-item\");\n    for (let i of all_contents_) {\n      i.className = \"f-item\";\n    }\n    selected_contents_.className = \"f-item selected\";\n  }, [selectContents]);\n\n  //現在どれだけスクロールされているかを管理するstate。\n  //effectによりマウント時にscrollのeventを追加し、アンマウント時にeventを削除。\n  const [scroll, setScroll] = useState(0);\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", () => {\n      setScroll(document.documentElement.scrollTop);\n    });\n    return window.removeEventListener(\"scroll\", () => {\n      setScroll(document.documentElement.scrollTop);\n    });\n  }, []);\n\n  //menu-barを固定するためのeffect。\n  //scroll stateが更新されるたびに動作。\n  useEffect(() => {\n    var menu_bar_ = document.getElementById(\"menu-bar\");\n    var picture_area_ = document.getElementById(\"picture-area\");\n    if (scroll >= picture_area_.scrollHeight) {\n      menu_bar_.className = \"fixed\";\n    } else {\n      menu_bar_.className = \"\";\n    }\n  }, [scroll]);\n\n  //メイン\n  return (\n    <div className=\"page\">\n      <header id=\"page-header\">\n        <div id=\"picture-area\">\n          <img src={img_background} alt=\"image1\"></img>\n          <h1>Kosuke Murakami's Portfolio</h1>\n        </div>\n        <div id=\"menu-bar\">\n          <nav>\n            <ul className=\"f-conteiner\">\n              <li>\n                <div className=\"f-item\">\n                  <a href=\"#\" id=\"contents_1\" onClick={changeContents}>\n                    About Me\n                  </a>\n                </div>\n              </li>\n              <li>\n                <div className=\"f-item\">\n                  <a href=\"#\" id=\"contents_2\" onClick={changeContents}>\n                    My Skills\n                  </a>\n                </div>\n              </li>\n              <li>\n                <div className=\"f-item\">\n                  <a href=\"#\" id=\"contents_3\" onClick={changeContents}>\n                    Works\n                  </a>\n                </div>\n              </li>\n            </ul>\n          </nav>\n        </div>\n      </header>\n      <Contents selectContents={selectContents} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}